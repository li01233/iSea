# Ultralytics YOLO 🚀, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 6  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]  # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1
  - [-1, 3, C2f, [128, True]] # 2-B2/4
  - [-1, 1, Conv, [256, 3, 2]]  # 3
  - [-1, 6, C2f, [256, True]] # 4-B3/8
  - [-1, 1, Conv, [512, 3, 2]]  # 5
  - [-1, 6, C2f, [512, True]] # 6-B4
  - [-1, 1, Conv, [1024, 3, 2]]  # 7
  - [-1, 3, C2f, [1024, True]] # 8
  - [-1, 1, SPPF, [1024, 5]]  # 9-B5/32 P5

  # YOLOv8.0n head
head:
# 注意通道保持一致
  # low-GD 得到低层次的全局特征
  - [[2, 4, 6, -1], 1, L_FAM, []] # 10 B2 B3 B4 B5
  - [-1, 1, L_IFM, [192, 3, 768]] # 11 in_ch = 128+256+512+1024 o_ch=512+256
  - [-1, 1, Split, [512, 256]] # 12

  # 将低层全局特征注入到p4中
  - [4, 1, SimConv, [512, 1, 1]] #13 B3 和上面的split的第一个对应 和B4对应
  - [9, 1, SimConv, [512, 1, 1]] #14 B5 和上面的split的第一个对应 和B4对应
  - [[13, 6, -1], 1, L_LAF,[512]] #15 x_local B3 B4 B5
  - [[-1, 12], 1, Inject, [512, 0, 0]] # 16 x_local+x_gobal(split) gobal_idx split_idx
  - [-1, 1, RepBlock, [512, 12]] # 17 Inject后通过12个Rep P4
  
  # 将低层全局特征注入到p3中
  - [2, 1, SimConv, [256, 1, 1]] # 18 B2 和上面的split的第二个对应 和B3对应
  - [6, 1, SimConv, [256, 1, 1]] # 19 B4 和上面的split的第二个对应 和B3对应
  - [[18, 4, -1], 1, L_LAF,[256]] #20 x_local B2 B3 B4
  - [[-1, 12], 1, Inject, [256, 1, 1]] # 21 x_local+x_gobal(split)
  - [-1, 1, RepBlock, [256, 12]] # 22 Inject后通过12个Rep P3 N3
  
  # high-GD:得到高层次的全局特征
  - [-1, 1, SimConv, [512, 1, 1]] # 23 P3 256->512
  - [9, 1, SimConv, [512, 1, 1]] # 24 P5 1024->512
  - [[23, 17, -1], 1, H_FAM, [1]] # 25 P3 P4 P5
  - [-1, 1, H_IFM, [2, 384, 8, 4, 1, 2, 0, 0, [0.1, 2]]] # 26 384这里要靠调试
  - [-1, 1, Split, [512, 1024]] # 27
  
  # 将高层全局特征注入到n4
  - [[22, 17], 1, H_LAF, []] # 28 P3+P4 不需要c对应
  - [-1, 1, SimConv, [512, 1, 1]] # 29 ?->512) H,前拼接 L,后拼接
  - [[-1, 27], 1, Inject, [512, 0, 0]] # 30 x_local+x_gobal(split)
  - [-1, 1, RepBlock, [512, 12]] # 31 n4

  # 将高层全局特征注入到n5
  - [[17, 9], 1, H_LAF, []] # 32 P4 + P5 不需要c对应
  - [-1, 1, SimConv, [1024, 1, 1]] # 33 ?->1024
  - [[-1, 27], 1, Inject, [1024, 1, 1]] # 34 x_local+x_gobal(split)
  - [-1, 1, RepBlock, [1024, 12]] # 35 n5

  - [[22, 31, 35], 1, Detect, [nc]]  # Detect(n3, n4, n5)